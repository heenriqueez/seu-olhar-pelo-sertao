# Nome do seu workflow
name: Deploy to GitHub Pages

# Define quando este workflow deve rodar
on:
  push:
    branches:
      - main  # Ou a branch que você usa como principal (ex: master)

# Permissões necessárias para a action poder publicar no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Define o que acontece quando o workflow roda
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Usa uma máquina virtual Linux para rodar os comandos
    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Cria o arquivo firebase-config.js usando os secrets
      - name: Create Firebase config file
        run: |
          echo "const firebaseConfig = {" > assets/js/firebase-config.js
          echo "  apiKey: \"${{ secrets.FIREBASE_API_KEY }}\"," >> assets/js/firebase-config.js
          echo "  authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\"," >> assets/js/firebase-config.js
          echo "  projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\"," >> assets/js/firebase-config.js
          echo "  storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"," >> assets/js/firebase-config.js
          echo "  messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\"," >> assets/js/firebase-config.js
          echo "  appId: \"${{ secrets.FIREBASE_APP_ID }}\"" >> assets/js/firebase-config.js
          echo "};" >> assets/js/firebase-config.js

      # 3. Configura o ambiente para o GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 4. "Upa" os arquivos do site (incluindo o firebase-config.js recém-criado)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.' # Publica a partir da raiz do projeto

      # 5. Faz o deploy final para o GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
